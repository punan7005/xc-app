<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- The SQL in these maps files has purposely been typed with more verbosity than is actually required.
 For example, many of the selects could have just used SELECT * FROM... instead of listing all of the columns.
 This is to demonstrate that even complex SQL can be handled and coded and formatted the way SQL was meant
 to be (i.e. not a bunch of concatenated strings in a Java class). -->

<sqlMap namespace="com.api.business.bean.AuthToken">

  <typeAlias alias="authToken" type="com.api.business.bean.AuthToken"/>

  <resultMap id="authTokenResult" class="authToken">
    <result property="uuid" column="id"/>
    <result property="parentId" column="parent_id"/>
    <result property="startTime" column="start_time"/>
    <result property="status" column="status"/>
    <result property="type" column="type"/>
    
    
	<!-- 
	<result property="roles" column="id" select="com.teacherclub.business.security.entity.Role.selectByUserId"/>
	 -->
  </resultMap> 
  
  <select id="selectById" resultMap="authTokenResult">
    select * from tb_authtoken 
		<dynamic prepend="where">
			<isParameterPresent>
				id = #value#
			</isParameterPresent>
		</dynamic> 
  </select>
  
  <select id="selectByMap" resultMap="authTokenResult">
    select * from tb_authtoken 
		<dynamic prepend="where">
			<isNotNull prepend="and" property="uuid">
				id = #uuid#
			</isNotNull>
			<isNotNull prepend="and" property="parentId">
				parent_id = #parentId#
			</isNotNull>
			<isNotNull prepend="and" property="startTime">
				start_time = #startTime#
			</isNotNull>
			<isNotNull prepend="and" property="status">
				status = #status#
			</isNotNull>
			<isNotNull prepend="and" property="type">
				type = #type#
			</isNotNull>
		</dynamic> 
		<dynamic>
			<isNotNull prepend="order by" property="orderBy">
				$orderBy$ $order$ 
			</isNotNull>	
			<isNotNull prepend="limit" property="limit">
				$start$,$end$
			</isNotNull>
		</dynamic>
  </select>
  
  <insert id="insert" parameterClass="authToken">
       insert into tb_authtoken 
				(id, 
				parent_id, 
				start_time,
				status,
				type
				)
				values
				(#uuid#, 
				#parentId#, 
				#startTime#,
				#status#,
				#type#
				);
    <selectKey resultClass="java.lang.String" keyProperty="uuid">
    	select last_insert_id(); 
    </selectKey>
  </insert>
  
  <select id="count" resultClass="int">
  		select count(*) from tb_authtoken
  		<dynamic prepend="where">
			<isNotNull prepend="and" property="uuid">
				id = #uuid#
			</isNotNull>
			<isNotNull prepend="and" property="parentId">
				parent_id = #parentId#
			</isNotNull>
			<isNotNull prepend="and" property="startTime">
				start_time = #startTime#
			</isNotNull>
			<isNotNull prepend="and" property="status">
				status = #status#
			</isNotNull>
			<isNotNull prepend="and" property="type">
				type = #type#
			</isNotNull>
  		</dynamic> 
  </select>
  
  <update id="update" parameterClass="authToken">
	update tb_authtoken 
	set
	parent_id = #parentId#, 
	start_time = #startTime#
	where
	id = #uuid# ;
  </update>
  
  <update id="updateByMap">
    update tb_authtoken
    	<dynamic prepend="set">
			<isNotNull prepend="," property="uuid">
				id = #uuid#
			</isNotNull>
			<isNotNull prepend="," property="parentId">
				parent_id = #parentId#
			</isNotNull>
			<isNotNull prepend="," property="startTime">
				start_time = #startTime#
			</isNotNull>
			<isNotNull prepend="," property="status">
				status = #status#
			</isNotNull>
			<isNotNull prepend="," property="type">
				type = #type#
			</isNotNull>
    	</dynamic> 
    	where id = #id#
  </update>
</sqlMap>